{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/chris/cyberDawgs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/chris/cyberDawgs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Users/chris/cyberDawgs/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/chris/cyberDawgs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';// Provides action functions for bot to render responses to user input\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ActionProvider=function ActionProvider(_ref){var createChatBotMessage=_ref.createChatBotMessage,setState=_ref.setState,children=_ref.children;// handles simple \"hello\" message\nvar handleHello=function handleHello(){var botMessage=createChatBotMessage('Hello. Nice to meet you.');setState(function(prev){return _objectSpread(_objectSpread({},prev),{},{messages:[].concat(_toConsumableArray(prev.messages),[botMessage])});});};// handles questions about NIST CSF thru NLP model\nvar nlp=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(message){var url,answer,response,botMessage;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:url='http://127.0.0.1:5000/api';console.log(JSON.stringify(message));answer=\"Sorry try again\";_context.prev=3;_context.next=6;return fetch(url,{method:'POST',headers:{'Access-Control-Allow-Origin':'*','Content-Type':'application/json'},body:JSON.stringify(message)}).then(function(response){if(response.ok){return response.text();}}).then(function(text){answer=createChatBotMessage(text);}).catch(function(error){console.error(\"Error with fetch\"+error);});case 6:response=_context.sent;_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);console.error(\"FETCH: \".concat(_context.t0));case 12:botMessage=answer;setState(function(prev){return _objectSpread(_objectSpread({},prev),{},{messages:[].concat(_toConsumableArray(prev.messages),[botMessage])});});case 14:case\"end\":return _context.stop();}},_callee,null,[[3,9]]);}));return function nlp(_x){return _ref2.apply(this,arguments);};}();// Can filter blank or inappropriate user input\nvar idk=function idk(){var response='I am not sure how to answer that question... try again?';var botMessage=createChatBotMessage(response);setState(function(prev){return _objectSpread(_objectSpread({},prev),{},{messages:[].concat(_toConsumableArray(prev.messages),[botMessage])});});};// Return all actions\nreturn/*#__PURE__*/_jsx(\"div\",{children:React.Children.map(children,function(child){return/*#__PURE__*/React.cloneElement(child,{actions:{handleHello:handleHello,nlp:nlp,idk:idk}});})});};export default ActionProvider;","map":{"version":3,"names":["React","ActionProvider","createChatBotMessage","setState","children","handleHello","botMessage","prev","messages","nlp","message","url","console","log","JSON","stringify","answer","fetch","method","headers","body","then","response","ok","text","catch","error","idk","Children","map","child","cloneElement","actions"],"sources":["C:/Users/chris/cyberDawgs/frontend/src/chatbot/ActionProvider.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n// Provides action functions for bot to render responses to user input\r\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\r\n  // handles simple \"hello\" message\r\n    const handleHello = () => {\r\n        const botMessage = createChatBotMessage('Hello. Nice to meet you.');\r\n    \r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n    };\r\n\r\n    // handles questions about NIST CSF thru NLP model\r\n    const nlp = async (message) => {\r\n        let url = 'http://127.0.0.1:5000/api';\r\n\r\n        console.log(JSON.stringify(message));\r\n\r\n        let answer = \"Sorry try again\"\r\n\r\n        try {\r\n          const response = await fetch(url, {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Access-Control-Allow-Origin': '*',\r\n                  'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(message)\r\n          }).then((response) => {\r\n              if (response.ok) {\r\n                return response.text()\r\n              }\r\n          }).then(text => {\r\n            answer = createChatBotMessage(text);\r\n          }).catch(error => {\r\n            console.error(\"Error with fetch\" + error);\r\n          });\r\n      } catch (error) {\r\n          console.error(`FETCH: ${error}`);\r\n      }\r\n\r\n      let botMessage = answer;\r\n\r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n    };\r\n\r\n    // Can filter blank or inappropriate user input\r\n    const idk = () => {\r\n        const response = 'I am not sure how to answer that question... try again?'\r\n\r\n        const botMessage = createChatBotMessage(response);\r\n    \r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n    };\r\n\r\n  // Return all actions\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n          actions: {\r\n            handleHello,\r\n            nlp,\r\n            idk,\r\n          },\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionProvider;"],"mappings":"mdAAA,MAAOA,MAAK,KAAM,OAAO,CAEzB;AAAA,2CACA,GAAMC,eAAc,CAAG,QAAjBA,eAAc,MAAqD,IAA/CC,qBAAoB,MAApBA,oBAAoB,CAAEC,QAAQ,MAARA,QAAQ,CAAEC,QAAQ,MAARA,QAAQ,CAChE;AACE,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAAS,CACtB,GAAMC,WAAU,CAAGJ,oBAAoB,CAAC,0BAA0B,CAAC,CAEnEC,QAAQ,CAAC,SAACI,IAAI,wCACTA,IAAI,MACPC,QAAQ,8BAAMD,IAAI,CAACC,QAAQ,GAAEF,UAAU,EAAC,IACxC,CAAC,CACP,CAAC,CAED;AACA,GAAMG,IAAG,6FAAG,iBAAOC,OAAO,sJAClBC,GAAG,CAAG,2BAA2B,CAErCC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC,CAEhCM,MAAM,CAAG,iBAAiB,uCAGLC,MAAK,CAACN,GAAG,CAAE,CAC9BO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,6BAA6B,CAAE,GAAG,CAClC,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEN,IAAI,CAACC,SAAS,CAACL,OAAO,CAChC,CAAC,CAAC,CAACW,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,GAAIA,QAAQ,CAACC,EAAE,CAAE,CACf,MAAOD,SAAQ,CAACE,IAAI,EAAE,CACxB,CACJ,CAAC,CAAC,CAACH,IAAI,CAAC,SAAAG,IAAI,CAAI,CACdR,MAAM,CAAGd,oBAAoB,CAACsB,IAAI,CAAC,CACrC,CAAC,CAAC,CAACC,KAAK,CAAC,SAAAC,KAAK,CAAI,CAChBd,OAAO,CAACc,KAAK,CAAC,kBAAkB,CAAGA,KAAK,CAAC,CAC3C,CAAC,CAAC,QAfIJ,QAAQ,8FAiBdV,OAAO,CAACc,KAAK,+BAAmB,CAAC,QAGjCpB,UAAU,CAAGU,MAAM,CAErBb,QAAQ,CAAC,SAACI,IAAI,wCACTA,IAAI,MACPC,QAAQ,8BAAMD,IAAI,CAACC,QAAQ,GAAEF,UAAU,EAAC,IACxC,CAAC,CAAC,mEACP,kBAlCKG,IAAG,6CAkCR,CAED;AACA,GAAMkB,IAAG,CAAG,QAANA,IAAG,EAAS,CACd,GAAML,SAAQ,CAAG,yDAAyD,CAE1E,GAAMhB,WAAU,CAAGJ,oBAAoB,CAACoB,QAAQ,CAAC,CAEjDnB,QAAQ,CAAC,SAACI,IAAI,wCACTA,IAAI,MACPC,QAAQ,8BAAMD,IAAI,CAACC,QAAQ,GAAEF,UAAU,EAAC,IACxC,CAAC,CACP,CAAC,CAEH;AACA,mBACE,qBACGN,KAAK,CAAC4B,QAAQ,CAACC,GAAG,CAACzB,QAAQ,CAAE,SAAC0B,KAAK,CAAK,CACvC,mBAAO9B,KAAK,CAAC+B,YAAY,CAACD,KAAK,CAAE,CAC/BE,OAAO,CAAE,CACP3B,WAAW,CAAXA,WAAW,CACXI,GAAG,CAAHA,GAAG,CACHkB,GAAG,CAAHA,GACF,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,EACE,CAEV,CAAC,CAED,cAAe1B,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}