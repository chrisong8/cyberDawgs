{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\cyberDawgs\\\\frontend\\\\src\\\\chatbot\\\\MessageParser.jsx\";\nimport React from 'react';\n\n// Calls appropriate response function based on message inputted by user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageParser = _ref => {\n  let {\n    children,\n    actions\n  } = _ref;\n  const parse = message => {\n    if (message.toLowerCase() === \"hi\" || message.toLowerCase() === \"hello\") {\n      actions.handleHello();\n    } else if (message === \"\") {\n      actions.idk();\n    } else {\n      actions.nlp(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        parse: parse,\n        actions: {}\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageParser;\nexport default MessageParser;\nvar _c;\n$RefreshReg$(_c, \"MessageParser\");","map":{"version":3,"names":["React","MessageParser","children","actions","parse","message","toLowerCase","handleHello","idk","nlp","Children","map","child","cloneElement"],"sources":["C:/Users/chris/cyberDawgs/frontend/src/chatbot/MessageParser.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n// Calls appropriate response function based on message inputted by user\r\nconst MessageParser = ({ children, actions }) => {\r\n  const parse = (message) => {\r\n    if (message.toLowerCase() === \"hi\" || message.toLowerCase() === \"hello\") {\r\n        actions.handleHello();\r\n    } else if (message === \"\") {\r\n      actions.idk();\r\n    } else {\r\n      actions.nlp(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n          parse: parse,\r\n          actions: {},\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageParser;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,MAAMC,aAAa,GAAG,QAA2B;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EAC1C,MAAMC,KAAK,GAAIC,OAAO,IAAK;IACzB,IAAIA,OAAO,CAACC,WAAW,EAAE,KAAK,IAAI,IAAID,OAAO,CAACC,WAAW,EAAE,KAAK,OAAO,EAAE;MACrEH,OAAO,CAACI,WAAW,EAAE;IACzB,CAAC,MAAM,IAAIF,OAAO,KAAK,EAAE,EAAE;MACzBF,OAAO,CAACK,GAAG,EAAE;IACf,CAAC,MAAM;MACLL,OAAO,CAACM,GAAG,CAACJ,OAAO,CAAC;IACtB;EACF,CAAC;EAED,oBACE;IAAA,UACGL,KAAK,CAACU,QAAQ,CAACC,GAAG,CAACT,QAAQ,EAAGU,KAAK,IAAK;MACvC,oBAAOZ,KAAK,CAACa,YAAY,CAACD,KAAK,EAAE;QAC/BR,KAAK,EAAEA,KAAK;QACZD,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC;IACJ,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KArBIF,aAAa;AAuBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}